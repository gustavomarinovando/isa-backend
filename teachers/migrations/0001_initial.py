# Generated by Django 5.2 on 2025-04-21 14:37

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('google_sheet_url', models.URLField(max_length=500, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='PeriodProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.FloatField()),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period_progress', to='academics.academicyear')),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period_progress', to='academics.gradelevel')),
                ('paralelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period_progress', to='academics.paralelo')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='academics.periodo')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='period_progress_records', to='academics.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='period_progress', to='teachers.teacher')),
            ],
            options={
                'verbose_name_plural': 'Period Progress Records',
                'ordering': ['teacher', 'academic_year', 'grade_level', 'periodo__number', 'paralelo'],
                'unique_together': {('teacher', 'academic_year', 'grade_level', 'periodo', 'paralelo')},
            },
        ),
        migrations.CreateModel(
            name='TopicCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tema_number', models.CharField(blank=True, max_length=10, null=True)),
                ('tema_title', models.TextField()),
                ('completion_date', models.DateField()),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_completions', to='academics.academicyear')),
                ('grade_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_completions', to='academics.gradelevel')),
                ('paralelo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_completions', to='academics.paralelo')),
                ('periodo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_completions', to='academics.periodo')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='topic_completion_records', to='academics.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_completions', to='teachers.teacher')),
            ],
            options={
                'verbose_name_plural': 'Topic Completion Records',
                'ordering': ['teacher', 'academic_year', 'grade_level', 'periodo__number', 'completion_date'],
                'unique_together': {('teacher', 'academic_year', 'grade_level', 'periodo', 'paralelo', 'tema_number')},
            },
        ),
    ]
